#!/usr/bin/env python3

DEFAULT_CONFIG_DIR = '.sbu'
CONFIG_DIR_VAR = 'SBU_CONFIG_DIR'

import argparse
import configparser
import json
import os
import subprocess
import sys

def main():
    # Parse command line arguments and read configuration file
    args = parse_arguments()
    config = configparser.ConfigParser()
    config.read(os.path.join(args.config_dir, 'config'))

    # Get path for sbu executables
    exec_path = os.path.dirname(os.path.realpath(__file__))

    # Create snapshot
    cmd = [os.path.join(exec_path, 'sbu-snapshot'), '-c', args.config_dir]
    p = subprocess.Popen(cmd, universal_newlines=True, stdout=subprocess.PIPE,
            cwd=config['DEFAULT']['local_backup_dir'])
    out, _ = p.communicate()
    if p.returncode != 0:
        print('error: could not create snapshot', file=sys.stderr)
        return 1
    snapshot = out.strip()

    # Store snapshot
    cmd = [os.path.join(exec_path, 'sbu-store'), '-c', args.config_dir,
            snapshot]
    p = subprocess.Popen(cmd, universal_newlines=True, stdout=subprocess.PIPE)
    out, _ = p.communicate()
    if p.returncode != 0:
        print('error: could not store snapshot', file=sys.stderr)
        return 1
    record = out.strip()

    # Pretty-print upon success for user convenience
    print(json.dumps(json.loads(record), indent=2, sort_keys=True))


def parse_arguments():
    p = argparse.ArgumentParser(
            formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    default_config = os.environ.get(CONFIG_DIR_VAR,
            os.path.join(os.path.expanduser('~'), DEFAULT_CONFIG_DIR))
    p.add_argument('-c', default=default_config, dest='config_dir',
            help='Path to configuration directory.')
    return p.parse_args()


if __name__ == '__main__':
    sys.exit(main())
