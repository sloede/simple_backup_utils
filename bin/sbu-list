#!/usr/bin/env python3

DEFAULT_CONFIG_DIR = '.sbu'

import argparse
import configparser
import json
import os
import sys

def main():
    # Parse command line arguments and read configuration file
    args = parse_arguments()
    config = configparser.ConfigParser()
    config.read(os.path.join(args.config_dir, 'config'))

    # Read current database
    db_file = os.path.join(args.config_dir, 'backups.json')
    with open(db_file, 'rt') as f:
        db_input = json.load(f)

    # Filter records
    db = db_input

    if args.json:
        print(json.dumps(db, indent=2, sort_keys=True))
    else:
        # Determine length of longest archive id, filename
        len_archive_id = max((len(r['archive_id']) for r in db))
        len_filename = max((len(r['filename']) for r in db))

        # Print header
        print("{:{}s} {:64s} {:{}s} {:12s} {:10s}"
                .format('archive_id', len_archive_id, 'checksum', 'filename',
                        len_filename, 'size', 'timestamp'))

        # Print one record per line
        for record in db:
            print("{:{}s} {:64s} {:{}s} {:12d} {:10d}".format(
                    record['archive_id'],
                    len_archive_id,
                    record['checksum'],
                    record['filename'],
                    len_filename,
                    record['size'],
                    record['timestamp']))


def parse_arguments():
    p = argparse.ArgumentParser(
            formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    default_config = os.path.join(os.path.expanduser('~'),
            DEFAULT_CONFIG_DIR)
    p.add_argument('-c', default=default_config, dest='config_dir',
            help='Path to configuration directory.')
    p.add_argument('--json', action='store_true',
            help='Output as JSON instead of human-readable.')
    return p.parse_args()


if __name__ == '__main__':
    sys.exit(main())
